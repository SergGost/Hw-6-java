// public class MergeSort {
	
// 	// Двусторонний алгоритм слияния, две отсортированные подпоследовательности объединяются в одну подпоследовательность
// 	public static void merge(int[] a, int low, int mid, int high) {
// 		 int [] tmp = new int [a.length]; // вспомогательный массив
// //		int[] tmp = new int[high-low+1];
// 		 int p1 = low, p2 = mid + 1, k = low; // p1 и p2 - указатели обнаружения, а k - указатель хранилища
// 		 // сначала перемещаем меньшее число в новый массив
// 		while (p1 <= mid && p2 <= high) {
// 			tmp[k++] = a[p1] <= a[p2] ? a[p1++] : a[p2++];
// 		}
// 		 // После выхода из вышеуказанного цикла, по очереди заполняем оставшиеся элементы в temp
// 	     // Пока будет выполняться только один из следующих двух
// 		 // Перемещаем оставшееся число слева в массив
// 		while (p1 <= mid) {
// 			 tmp [k ++] = a [p1 ++]; // Если первая последовательность не была обнаружена, напрямую добавляем все следующие элементы в объединенную последовательность
// 		}
// 		 // Перемещаем оставшиеся числа справа в массив
// 		while (p2 <= high) {
// 			 tmp [k ++] = a [p2 ++]; // То же, что и выше
// 		}
// 		 // Копируем обратно в исходный массив // Перезаписываем массив nums числами из нового массива
// 		for (int i = low; i <= high; i++) {
// 			a[i] = tmp[i];
// 		}
// 	}
 
// 	public static void mergeSort(int[] a, int start, int end) {
// 		 if (start <end) {// Завершаем рекурсию, если в подпоследовательности всего один элемент
//  // int mid = (start + end) / 2; // делим подпоследовательность
// 			int mid = start + ((end - start) >> 1);
// //			System.out.println(start+"-"+mid+"-"+end);
// 			 mergeSort (a, start, mid); // Рекурсивно сортируем левую подпоследовательность
// 			 mergeSort (a, mid + 1, end); // Рекурсивно сортируем правую подпоследовательность
// 			 merge (a, start, mid, end); // объединить слева и справа
// 		}
// 	}
	
// 	public static void main(String[] args) {
// 		int[] arr = { 6, 3, 8, 2, 9, 1,7,4 };
// 		 System.out.print ("Массив перед сортировкой:");
// 		for (int num : arr) {
// 			System.out.print(num + " ");
// 		}
// 		mergeSort(arr, 0, arr.length-1);
// 		System.out.println();
// 		 System.out.print ("Отсортированный массив:");
// 		for (int num : arr) {
// 			System.out.print(num + " ");
// 		}
// 	}
// }
 
//  // Массив перед сортировкой: 6 3 8 2 9 1 7 4 
//  // Отсортированный массив: 1 2 3 4 6 7 8 9 